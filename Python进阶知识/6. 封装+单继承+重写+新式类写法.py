"""
面向对象的三大特性: 封装、继承、多态

一、封装
    1. 将复杂的信息、流程给包起来，内部处理，让使用者通过简单的调用即可；属性或方法
    2. 隐藏属性/方法（私有权限， 双下划线）:
        - 在属性名或方法名前加双下划线
    3. 外部访问隐藏属性:
        - 属性
            - (不正规) 隐藏属性实际是将名字修改为 _类名__属性名 e.g: _Person__age
            - (正规) 类中定义方法来获取
        - 方法
            - _类名__方法名()
            - self.__方法名()
    4. 私有属性/方法:
        - xxx: 普通属性/方法
        - __xxx: 双下划线, 隐藏属性, 类中定义时: 外部无法访问, 子类无法继承
        - _xxx: 单下划线, 声明私有属性/方法, 类中定义时: 外部可访问，子类可继承；无法导入
    5. 访问私有属性/方法 (单下划线)
        - 类名._属性名
        - 实例._方法名()
        
二、单继承
    1. 让类和类之间转变为父子关系, 子类默认继承父类的属性和方法
    2. 单继承 class 类名(父类名)
    3. 继承的传递(多继承)
        C继承B, B继承A, C便具有A/B的属性和方法

三、方法的重写
    1. 子类重写父类的方法
    2. 子类显性调用父类的方法: 
        - 父类名.方法名(self)
        - [推荐, 简写] super().方法名()
            super类实例化后可以调用父类的属性/方法
        - [完整写法] super(子类名, self).方法名
        
四、新式类的写法
    1. 经典类: 不由任意内置类型派生出来的类
        - class A: pass
        - class A(): pass
    2. 派生类: 子类继承父类后有属于自己的属性/方法
    3. [推荐]新式类: 继承了object类或者该类的子类都是新式类
        - class A(object): pass
        - object: 所有类的父类, 提供了一些内置的属性和方法, 可以使用dir()查看
        - python3 中如果类没有继承任何类, 默认继承object类, 因此python3都是新式类
"""