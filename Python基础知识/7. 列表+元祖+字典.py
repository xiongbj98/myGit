"""
一、列表 list []
    - 增
        append()  # 整体添加
        extend(iter)  # 分散（遍历）添加
        insert()  # 指定位置插入元素
    - 删
        del
        pop()  # 删除指定索引元素，默认最后一个
        remove()  # 根据元素进行删除
    - 改
        l[i] = new_ele
    - 查
        [m:n:step] / find() / index() / count() / len()
        in
        not in 
    - 排序
        sort()  # 将列表按特定顺序排序，默认从小到大
        reverse()  # 倒序
    - 列表推导式
        [表达式 for 变量 in 列表 if 判断表达式]
        
二、元组 tuple ()
    与列表区别1: 只有一个元素时，末尾必须加上逗号
    与列表区别2: 元组只支持查询，不支持增删改
    - 查询同列表
    - 应用场景
        函数的参数和返回值
        格式化输出
        数据不可以被修改（保护数据）
    
三、字典 dict {}
    - 增
        d[new_key] = val
    - 删
        del + 字典名
        del + 字典名[key]  # 删除指定键值对
        d.clear()  # 清空整个字典, 字典保留
        d.pop(key)  # 删除键值对
        d.popitem()  # 默认删除最后一个键值对
    - 改
        d[old_key] = new_val
    - 查
        d[key]  
        get()
    - 常见操作
        len()
        keys()  # 获取字典所有键名，可迭代
        values()  # 获取字典所有值，可迭代
        items()  # 所有键值对，可迭代（元组）
    - 应用场景
        存储描述一个物体的相关信息

四、集合 set {}
    概念: 集合是无序的，元素是唯一的，元素可以是不同类型
    定义:
        d = {}  # 定义空字典
        s = set()  # 定义空集合
    无序性:
        集合无序的实现方式涉及哈希表, hash值不同, 在集合位置便不同, 因此实现了无序性。
        int整形的hash就是它本身, 顺序不会改变
    特性:
        1. 不能修改集合中的值
        2. 唯一性, 可以去重
    集合的常见操作:
        ==增==
        add()  # 一次添加一个元素
        update()  # 参数为可迭代对象，把元素遍历进行添加
        ==删==
        remove()  # 删除集合中指定元素
        pop()  # 默认删除根据hash排序后的第一个
        discard()  # 元素存在则删除，没有不会报错
    交集和并集:
        & (交集): 两个或多个集合都有的元素
        | (并集): 两个或多个集合一起的所有元素 
"""